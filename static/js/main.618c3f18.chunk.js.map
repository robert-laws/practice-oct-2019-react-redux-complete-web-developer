{"version":3,"sources":["components/Scroll/Scroll.component.jsx","components/Card/Card.component.jsx","components/CardList/CardList.component.jsx","components/LoadingSpinner/LoadingSpinner.component.jsx","components/SearchBox/SearchBox.component.jsx","components/ErrorBoundry.js","App.js","index.js"],"names":["Scroll","props","className","children","Card","id","name","email","style","width","src","alt","CardList","robots","map","robot","key","LoadingSpinner","role","SearchBox","handleChange","type","placeholder","onChange","ErrorBoundry","state","hasError","errorMessage","error","info","this","setState","Component","App","loading","searchText","event","target","value","componentDidMount","a","fetch","then","response","json","data","length","console","filteredRobots","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"uaAYeA,G,MARA,SAACC,GACd,OACE,yBAAKC,UAAU,eACZD,EAAME,YCeEC,G,MAlBF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAKxB,OACE,yBAAKL,UAAU,yCAAyCM,MALxC,CAChBC,MAAO,UAKL,yBAAKC,IAAG,+BAA0BL,EAA1B,iBAA6CM,IAAI,QAAQT,UAAU,iBAC3E,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,cAAcI,GAC5B,uBAAGJ,UAAU,aACX,+BAAQK,QCAHK,G,MAVE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,yBAAKX,UAAU,kBACZW,EAAOC,KAAI,SAAAC,GACV,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAMV,GAAIA,GAAIU,EAAMV,GAAIC,KAAMS,EAAMT,KAAMC,MAAOQ,EAAMR,cCIlEU,EAXQ,WACrB,OACE,yBAAKf,UAAU,eACb,yBAAKA,UAAU,4BAA4BgB,KAAK,UAC9C,0BAAMhB,UAAU,WAAhB,eAEF,4BAAQA,UAAU,mBAAlB,gBCESiB,EARG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,6BACE,2BAAOC,KAAK,SAASC,YAAY,oBAAoBjB,GAAG,aAAaC,KAAK,aAAaJ,UAAU,oBAAoBqB,SAAUH,MCsBtHI,E,YAxBb,WAAYvB,GAAQ,IAAD,8BACjB,4CAAMA,KAEDwB,MAAQ,CACXC,UAAU,EACVC,aAAc,IALC,E,+EASDC,EAAOC,GACvBC,KAAKC,SAAS,CACZL,UAAU,EACVC,aAAcE,M,+BAKhB,OAAGC,KAAKL,MAAMC,SACL,qDAA2BI,KAAKL,MAAME,cAExCG,KAAK7B,MAAME,a,GArBK6B,aCkEZC,G,iNA1DbR,MAAQ,CACNS,SAAS,EACTrB,OAAQ,GACRsB,WAAY,I,EAGdf,aAAe,SAAAgB,GAAU,IAAD,EACEA,EAAMC,OAAtB/B,EADc,EACdA,KAAMgC,EADQ,EACRA,MAEd,EAAKP,SAAL,eACGzB,EAAOgC,K,EAIZC,kB,sBAAoB,4BAAAC,EAAA,+EAEGC,MAAM,8CAA8CC,KAApD,uCAAyD,WAAMC,GAAN,SAAAH,EAAA,sEAC7DG,EAASC,OADoD,mFAAzD,uDAFH,QAEVC,EAFU,QAMRC,OAAS,GACf,EAAKf,SAAS,CACZlB,OAAQgC,EACRX,SAAS,IATG,gDAahBa,QAAQnB,MAAR,MAbgB,yD,wEAiBV,IAAD,OACDoB,EAAiBlB,KAAKL,MAAMZ,OAAOoC,QAAO,SAAAlC,GAAK,OACnDA,EAAMT,KAAK4C,cAAcC,SAAS,EAAK1B,MAAMU,WAAWe,kBAGlDhB,EAAYJ,KAAKL,MAAjBS,QAER,OACE,yBAAKhC,UAAU,aACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,aAAd,eACA,kBAAC,EAAD,CAAWkB,aAAcU,KAAKV,gBAE/Bc,EAAU,kBAAC,EAAD,MAEP,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUrB,OAAQmC,W,GAjDhBhB,c,MCFlBoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.618c3f18.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Scroll.styles.scss';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div className='scroll-area'>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nimport './Card.styles.scss';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  const cardStyle = {\r\n    width: '14rem'\r\n  }\r\n\r\n  return (\r\n    <div className='shadow card border-dark m-3 float-left' style={cardStyle}>\r\n      <img src={`https://robohash.org/${id}?size=200x200`} alt='robot' className='card-img-top' />\r\n      <div className='card-body text-dark'>\r\n        <h6 className='card-title'>{name}</h6>\r\n        <p className='card-text'>\r\n          <small>{email}</small>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card.component';\r\n\r\nimport './CardList.styles.scss';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return(\r\n    <div className='list-container'>\r\n      {robots.map(robot => {\r\n        return <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <div className='spinner-div'>\r\n      <div className=\"spinner-border text-light\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n      <strong className='text-light mt-2'>Loading...</strong>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingSpinner;","import React from 'react';\r\n\r\nconst SearchBox = ({ handleChange }) => {\r\n  return (\r\n    <div>\r\n      <input type='search' placeholder='Search for Robots' id='searchText' name='searchText' className='form-control mb-3' onChange={handleChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      hasError: false,\r\n      errorMessage: ''\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({\r\n      hasError: true,\r\n      errorMessage: info\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if(this.state.hasError) {\r\n      return <h1>Error encountered.... {this.state.errorMessage}</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport Scroll from './components/Scroll/Scroll.component';\nimport CardList from './components/CardList/CardList.component';\nimport LoadingSpinner from './components/LoadingSpinner/LoadingSpinner.component';\nimport SearchBox from './components/SearchBox/SearchBox.component';\nimport ErrorBoundry from './components/ErrorBoundry';\n\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    loading: true,\n    robots: [],\n    searchText: ''\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  componentDidMount = async () => {\n    try {\n      const data = await fetch('https://jsonplaceholder.typicode.com/users').then(async(response) => {\n        return await response.json();\n      })\n\n      if(data.length > 0) {\n        this.setState({\n          robots: data,\n          loading: false\n        })      \n      }\n    } catch (error) {\n      console.error(error)\n    }   \n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => (\n      robot.name.toLowerCase().includes(this.state.searchText.toLowerCase()))\n    )\n\n    const { loading } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className='text-center'>\n          <h1 className='app-title'>RoboFriends</h1>\n          <SearchBox handleChange={this.handleChange} />\n        </div>\n        {loading ? <LoadingSpinner /> : \n          (\n            <Scroll>\n              <ErrorBoundry>\n                <CardList robots={filteredRobots} />\n              </ErrorBoundry>\n            </Scroll>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}